name: Discord Commit Notification

on:
  push:
    branches: main

jobs:
  notify-discord:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Send Discord notification (all commits in push)
        uses: actions/github-script@v6
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          script: |
            const webhookUrl = process.env.DISCORD_WEBHOOK_URL;
            if (!webhookUrl) core.setFailed('DISCORD_WEBHOOK_URL secret is missing');

            const commits = context.payload?.commits;
            if (!commits || commits.length === 0) core.setFailed('No commits found in this push event');

            const fields = commits.map(commit => {
              const sha = commit.id || '(unknown)';
              const shortSha = sha.slice(0, 7);
              const msg = commit.message?.split('\n')[0] || '(no message)';
              const body = commit.message?.split('\n').slice(1).join('\n') || '';
              const author = commit.author?.name || commit.author?.username || '(unknown)';
              const commitUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${sha}`;

              const commitFields = [
                { name: `Commit ${shortSha}`, value: msg, inline: false }
              ];
              if (body.trim() !== '') commitFields.push({ name: 'Details', value: body, inline: false });
              commitFields.push(
                { name: 'By', value: author, inline: true },
                { name: 'Link', value: `[View on GitHub](${commitUrl})`, inline: true }
              );

              return commitFields;
            }).flat();

            const embed = {
              title: 'TDS Statistics Editor Update',
              description: `Push contains ${commits.length} commit(s)`,
              color: 5763719,
              fields,
              footer: { text: 'Thank you for using the Statistics Editor!' },
              timestamp: new Date().toISOString()
            };

            const payload = { embeds: [embed] };
            const data = JSON.stringify(payload);

            try {
              const response = await fetch(webhookUrl, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'User-Agent': 'github-actions/discord-notify'
                },
                body: data
              });

              if (!response.ok) {
                core.setFailed(`Failed to post to Discord: HTTP ${response.status} ${response.statusText}`);
              } else {
                core.info('Discord webhook posted successfully');
              }
            } catch (error) {
              core.setFailed(`Failed to post to Discord: ${error.message}`);
            }